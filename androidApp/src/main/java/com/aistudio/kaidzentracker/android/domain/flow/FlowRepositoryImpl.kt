package com.aistudio.kaidzentracker.android.domain.flowimport com.aistudio.kaidzentracker.android.data.localDataSource.flowDataSource.FlowDataSourceimport com.aistudio.kaidzentracker.android.data.localDataSource.flowDataSource.FlowEntityclass FlowRepositoryImpl(private val flowDataSource: FlowDataSource):FlowRepository {    override suspend fun get(): Flow? =        flowDataSource.getLocalSource()?.let { entity -> mapToDomain(flowEntity = entity) }    override suspend fun delete() = flowDataSource.deleteLocalSource()    override suspend fun save(flow: Flow) {        delete()        flowDataSource.insertLocalSource(flowEntity = mapToEntity(flow = flow))    }    private fun mapToDomain(flowEntity: FlowEntity): Flow = with(flowEntity) {        Flow(            firstQuestions = firstQuestions ?: 0.0,            secondQuestions = secondQuestions ?: 0.0,            threeQuestions = threeQuestions ?: 0.0,            fourQuestions = fourQuestions ?: 0.0,            fiveQuestions = fiveQuestions ?: 0.0,            sixQuestions = sixQuestions ?: 0.0,            result = result ?: 0.0,            newResult = newResult ?: 0.0        )    }    private fun mapToEntity(flow: Flow?): FlowEntity = with(flow) {        FlowEntity(            firstQuestions = this?.firstQuestions,            secondQuestions = this?.secondQuestions,            threeQuestions = this?.threeQuestions,            fourQuestions = this?.fourQuestions,            fiveQuestions = this?.fiveQuestions,            sixQuestions = this?.sixQuestions,            result = this?.result,            newResult = this?.newResult        )    }}