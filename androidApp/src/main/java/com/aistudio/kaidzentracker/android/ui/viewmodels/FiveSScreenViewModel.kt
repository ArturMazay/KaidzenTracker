package com.aistudio.kaidzentracker.android.ui.viewmodelsimport androidx.lifecycle.LiveDataimport androidx.lifecycle.MutableLiveDataimport androidx.lifecycle.ViewModelimport androidx.lifecycle.viewModelScopeimport com.aistudio.kaidzentracker.android.domain.fiveS.FiveSimport com.aistudio.kaidzentracker.android.domain.fiveS.FiveSRepositoryimport com.aistudio.kaidzentracker.android.ui.viewmodels.models.ApplicationIntentimport com.aistudio.kaidzentracker.android.ui.viewmodels.models.ApplicationViewStateimport com.aistudio.kaidzentracker.android.ui.viewmodels.models.IntentHandlerimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.launchclass FiveSScreenViewModel(    private val fiveSRepository: FiveSRepository,) : ViewModel(), IntentHandler<ApplicationIntent> {    private val _fiveSScreenState: MutableLiveData<FiveS> =        MutableLiveData(FiveS())    val fiveSScreenState: LiveData<FiveS> = _fiveSScreenState    override fun getIntent(intent: ApplicationIntent) {        when (val currentViewState = _fiveSScreenState.value) {            is FiveS -> intent(intent, currentViewState)        }    }    private fun intent(intent: ApplicationIntent, currentViewState: FiveS) {        when (intent) {            is ApplicationIntent.InitialScreen -> loadDataFiveSScreen()            is ApplicationIntent.ChangedFirstQuestions -> _fiveSScreenState.postValue(                _fiveSScreenState.value?.copy(firstQuestions = intent.newResult.toDouble()))            is ApplicationIntent.ChangedSecondQuestions -> _fiveSScreenState.postValue(                _fiveSScreenState.value?.copy(secondQuestions = intent.newResult.toDouble()))            is ApplicationIntent.ChangedThreeQuestions -> _fiveSScreenState.postValue(                _fiveSScreenState.value?.copy(threeQuestions = intent.newResult.toDouble()))            is ApplicationIntent.ChangedFourQuestions -> _fiveSScreenState.postValue(                _fiveSScreenState.value?.copy(fourQuestions = intent.newResult.toDouble()))            is ApplicationIntent.ChangedFiveQuestions -> _fiveSScreenState.postValue(                _fiveSScreenState.value?.copy(fiveQuestions = intent.newResult.toDouble()))            is ApplicationIntent.ChangedSixQuestions -> _fiveSScreenState.postValue(                _fiveSScreenState.value?.copy(sixQuestions = intent.newResult.toDouble()))            is ApplicationIntent.ChangedSevenQuestions -> _fiveSScreenState.postValue(                _fiveSScreenState.value?.copy(sevenQuestions = intent.newResult.toDouble()))            is ApplicationIntent.ChangedEightQuestions -> _fiveSScreenState.postValue(                _fiveSScreenState.value?.copy(eightQuestions = intent.newResult.toDouble()))            is ApplicationIntent.ChangedNineQuestions -> _fiveSScreenState.postValue(                _fiveSScreenState.value?.copy(nineQuestions = intent.newResult.toDouble()))            is ApplicationIntent.ChangedTenQuestions -> _fiveSScreenState.postValue(                _fiveSScreenState.value?.copy(tenQuestions = intent.newResult.toDouble()))            is ApplicationIntent.ChangedEleventhQuestions -> _fiveSScreenState.postValue(                _fiveSScreenState.value?.copy(eleventhQuestions = intent.newResult.toDouble()))            is ApplicationIntent.ChangedTwelfthQuestions -> _fiveSScreenState.postValue(                _fiveSScreenState.value?.copy(twelfthQuestions = intent.newResult.toDouble()))            is ApplicationIntent.ChangedThirteenthQuestions -> _fiveSScreenState.postValue(                _fiveSScreenState.value?.copy(thirteenthQuestions = intent.newResult.toDouble()))            is ApplicationIntent.SaveClicked -> saveData(state = currentViewState)            is ApplicationIntent.DeletedClicked -> deleteAll(state = currentViewState)        }    }    private fun deleteAll(state: FiveS) {        viewModelScope.launch(Dispatchers.IO) {            fiveSRepository.delete()            loadDataFiveSScreen()        }    }    private fun saveData(state: FiveS) {        _fiveSScreenState.postValue(FiveS(isLoading = true))        viewModelScope.launch(Dispatchers.IO) {            val calc = (                    state.firstQuestions +                            state.secondQuestions +                            state.threeQuestions +                            state.fourQuestions +                            state.fiveQuestions +                            state.sixQuestions +                            state.sevenQuestions +                            state.eightQuestions +                            state.nineQuestions +                            state.tenQuestions +                            state.eleventhQuestions +                            state.twelfthQuestions +                            state.thirteenthQuestions) / 13.toDouble()            fiveSRepository.save(fiveS = FiveS(                isLoading = false,                firstQuestions = state.firstQuestions,                secondQuestions = state.secondQuestions,                threeQuestions = state.threeQuestions,                fourQuestions = state.fourQuestions,                fiveQuestions = state.fiveQuestions,                sixQuestions = state.sixQuestions,                sevenQuestions = state.sevenQuestions,                eightQuestions = state.eightQuestions,                nineQuestions = state.nineQuestions,                tenQuestions = state.tenQuestions,                eleventhQuestions = state.eleventhQuestions,                twelfthQuestions = state.twelfthQuestions,                thirteenthQuestions = state.thirteenthQuestions,                result = calc,                newResult = if (state.result == calc) calc else state.result))            loadDataFiveSScreen()        }    }    private fun loadDataFiveSScreen() {        viewModelScope.launch(Dispatchers.IO) {            _fiveSScreenState.postValue(FiveS(isLoading = true))            with(fiveSRepository.get()) {                _fiveSScreenState.postValue(_fiveSScreenState.value?.copy(                    isLoading = false,                    firstQuestions = firstQuestions ?: 0.0,                    secondQuestions = secondQuestions ?: 0.0,                    threeQuestions = threeQuestions ?: 0.0,                    fourQuestions = fourQuestions ?: 0.0,                    fiveQuestions = fiveQuestions ?: 0.0,                    sixQuestions = sixQuestions ?: 0.0,                    sevenQuestions = sevenQuestions ?: 0.0,                    eightQuestions = eightQuestions ?: 0.0,                    nineQuestions = nineQuestions ?: 0.0,                    tenQuestions = tenQuestions ?: 0.0,                    eleventhQuestions = eleventhQuestions ?: 0.0,                    twelfthQuestions = twelfthQuestions ?: 0.0,                    thirteenthQuestions = thirteenthQuestions ?: 0.0,                    result = result ?: 0.0,                    newResult = newResult ?: 0.0))            }        }    }}