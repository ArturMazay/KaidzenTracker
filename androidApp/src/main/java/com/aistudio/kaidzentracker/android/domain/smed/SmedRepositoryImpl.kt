package com.aistudio.kaidzentracker.android.domain.smedimport com.aistudio.kaidzentracker.android.data.localDataSource.smedDataSource.SmedDataSourceimport com.aistudio.kaidzentracker.android.data.localDataSource.smedDataSource.SmedEntityclass SmedRepositoryImpl(private val smedDataSource: SmedDataSource) : SmedRepository {    override suspend fun get(): Smed? =        smedDataSource.getLocalSource()?.let { entity -> mapToDomain(smedEntity = entity) }    override suspend fun delete() = smedDataSource.deleteLocalSource()    override suspend fun save(smed: Smed) {        delete()        smedDataSource.insertLocalSource(smedEntity = mapToEntity(smed = smed))    }    private fun mapToDomain(smedEntity: SmedEntity): Smed = with(smedEntity) {        Smed(            firstQuestions = firstQuestions ?: 0.0,            secondQuestions = secondQuestions ?: 0.0,            threeQuestions = threeQuestions ?: 0.0,            fourQuestions = fourQuestions ?: 0.0,            fiveQuestions = fiveQuestions ?: 0.0,            sixQuestions = sixQuestions ?: 0.0,            result = result ?: 0.0,            newResult = newResult ?: 0.0        )    }   private fun mapToEntity(smed: Smed?): SmedEntity = with(smed){        SmedEntity(            firstQuestions = this?.firstQuestions,            secondQuestions = this?.secondQuestions,            threeQuestions = this?.threeQuestions,            fourQuestions = this?.fourQuestions,            fiveQuestions = this?.fiveQuestions,            sixQuestions = this?.sixQuestions,            result = this?.result,            newResult = this?.newResult        )    }}