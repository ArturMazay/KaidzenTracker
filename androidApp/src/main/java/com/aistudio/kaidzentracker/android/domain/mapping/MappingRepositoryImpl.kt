package com.aistudio.kaidzentracker.android.domain.mappingimport com.aistudio.kaidzentracker.android.data.localDataSource.mappingDataSource.MappingDataSourceimport com.aistudio.kaidzentracker.android.data.localDataSource.mappingDataSource.MappingEntityclass MappingRepositoryImpl(private val mappingDataSource: MappingDataSource) : MappingRepository {    override suspend fun get(): Mapping? =        mappingDataSource.getLocalSource()?.let { entity -> mapToDomain(mappingEntity = entity) }    override suspend fun delete() = mappingDataSource.deleteLocalSource()    override suspend fun save(mapping: Mapping) {        delete()        mappingDataSource.insertLocalSource(mappingEntity = mapToEntity(mapping = mapping))    }    private fun mapToDomain(mappingEntity: MappingEntity): Mapping = with(mappingEntity) {        Mapping(            firstQuestions = firstQuestions ?: 0.0,            secondQuestions = secondQuestions ?: 0.0,            threeQuestions = threeQuestions ?: 0.0,            fourQuestions = fourQuestions ?: 0.0,            fiveQuestions = fiveQuestions ?: 0.0,            sixQuestions = sixQuestions ?: 0.0,            result = result ?: 0.0,            newResult = newResult ?: 0.0        )    }    private fun mapToEntity(mapping: Mapping?): MappingEntity = with(mapping) {        MappingEntity(            firstQuestions = this?.firstQuestions,            secondQuestions = this?.secondQuestions,            threeQuestions = this?.threeQuestions,            fourQuestions = this?.fourQuestions,            fiveQuestions = this?.fiveQuestions,            sixQuestions = this?.sixQuestions,            result = this?.result,            newResult = this?.newResult        )    }}