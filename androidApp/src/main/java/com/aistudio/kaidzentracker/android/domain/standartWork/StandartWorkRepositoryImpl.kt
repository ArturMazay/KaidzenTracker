package com.aistudio.kaidzentracker.android.domain.standartWorkimport com.aistudio.kaidzentracker.android.data.localDataSource.standartWorkDataSource.StandartWorkDataSourceimport com.aistudio.kaidzentracker.android.data.localDataSource.standartWorkDataSource.StandartWorkEntityclass StandartWorkRepositoryImpl(private val standartWorkDataSource: StandartWorkDataSource) :    StandartWorkRepository {    override suspend fun get(): StandartWork? =        standartWorkDataSource.getLocalSource()?.let { entity -> mapToDomain(entity) }    override suspend fun delete() = standartWorkDataSource.deleteLocalSource()    override suspend fun save(standartWork: StandartWork) {        delete()        standartWorkDataSource.insertLocalSource(standartWorkEntity = mapToEntity(standartWork = standartWork))    }    private fun mapToDomain(standartWorkEntity: StandartWorkEntity): StandartWork =        with(standartWorkEntity) {            StandartWork(                firstQuestions = firstQuestions ?: 0.0,                secondQuestions = secondQuestions ?: 0.0,                threeQuestions = threeQuestions ?: 0.0,                fourQuestions = fourQuestions ?: 0.0,                fiveQuestions = fiveQuestions ?: 0.0,                sixQuestions = sixQuestions ?: 0.0,                result = result ?: 0.0,                newResult = newResult ?: 0.0            )        }    private fun mapToEntity(standartWork: StandartWork): StandartWorkEntity = with(standartWork) {        StandartWorkEntity(            firstQuestions = firstQuestions,            secondQuestions = secondQuestions,            threeQuestions = threeQuestions,            fourQuestions = fourQuestions,            fiveQuestions = fiveQuestions,            sixQuestions = sixQuestions,            result = result,            newResult = newResult        )    }}