package com.aistudio.kaidzentracker.android.screensimport android.widget.Toastimport androidx.compose.foundation.ExperimentalFoundationApiimport androidx.compose.foundation.backgroundimport androidx.compose.foundation.layout.Boximport androidx.compose.foundation.layout.fillMaxSizeimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.lazy.LazyColumnimport androidx.compose.runtime.*import androidx.compose.runtime.livedata.observeAsStateimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.platform.LocalContextimport androidx.compose.ui.unit.dpimport androidx.navigation.NavControllerimport com.aistudio.kaidzentracker.android.screens.commonScreenComponents.*import com.aistudio.kaidzentracker.android.theme.PrimaryVariantimport com.aistudio.kaidzentracker.android.ui.viewmodels.StaffTrainingViewModelimport com.aistudio.kaidzentracker.android.ui.viewmodels.models.ApplicationIntentimport org.koin.androidx.compose.koinViewModelimport kotlin.math.floor@OptIn(ExperimentalFoundationApi::class)@Composablefun StaffTrainingScreen(    modifier: Modifier,    navController: NavController,    staffTrainingViewModel: StaffTrainingViewModel = koinViewModel(),) {    val context = LocalContext.current    val state = staffTrainingViewModel.staffTrainingScreenState.observeAsState().value    var visible by remember { mutableStateOf(false) }    when (state!!.isLoading) {        false -> Box(modifier = modifier            .fillMaxSize()            .background(color = Color.White)) {            LazyColumn(modifier = modifier.padding(bottom = 45.dp)) {                item {                    CommonLogoAppBar(modifier = modifier, isAnimated = visible)                }                stickyHeader {                    CommonHeaderText(                        modifier = modifier,                        textHeader = "ОБУЧЕНИЕ ПЕРСОНАЛА",                        colorBackgraund = PrimaryVariant,                        height = 28,                        shape = 5,                        paddingHorizontal = 6                    )                }                item {                    CommonTableHeader(modifier = modifier)                }                item {                    CommonButtonsInput(modifier = modifier,                        value = state.firstQuestions.toInt(),                        onValueChange = { firstQuestions ->                            staffTrainingViewModel                                .getIntent(intent = ApplicationIntent                                    .ChangedFirstQuestions(newResult = firstQuestions))                        },                        numberQuestions = "1",                        textQuestions = "Процент сотрудников, прошедших 8-часовой курс\n" +                                "\"Введение в Kaizen\"",                        textRecommendation = "1. Составить пофамильный план-график обучения сотрудников\n" +                                "2. Организовать обучение сотрудников\n" +                                "3. Организовать учет результатов обучения сотрудников")                }                item {                    CommonButtonsInput(modifier = modifier,                        value = state.secondQuestions.toInt(),                        onValueChange = { secondQuestions ->                            staffTrainingViewModel.getIntent(intent = ApplicationIntent.ChangedSecondQuestions(                                newResult = secondQuestions))                        },                        numberQuestions = "2",                        textQuestions = "Процент сотрудников, прошедших 8-часовой курс\n" +                                "\"Картирование и Хронометраж\"",                        textRecommendation = "1. Составить пофамильный план-график обучения сотрудников\n" +                                "2. Организовать обучение сотрудников\n" +                                "3. Организовать учет результатов обучения сотрудников")                }                item {                    CommonButtonsInput(modifier = modifier,                        value = state.threeQuestions.toInt(),                        onValueChange = { threeQuestions ->                            staffTrainingViewModel.getIntent(intent = ApplicationIntent.ChangedThreeQuestions(                                newResult = threeQuestions))                        },                        numberQuestions = "3",                        textQuestions = "Процент сотрудников, прошедших 8-часовой курс Инструменты Kaizen.",                        textRecommendation = "1. Составить пофамильный план-график обучения сотрудников\n" +                                "2. Организовать обучение сотрудников\n" +                                "3. Организовать учет результатов обучения сотрудников")                }                item {                    CommonButtonsInput(modifier = modifier,                        value = state.fourQuestions.toInt(),                        onValueChange = { fourQuestions ->                            staffTrainingViewModel.getIntent(intent = ApplicationIntent.ChangedFourQuestions(                                newResult = fourQuestions))                        },                        numberQuestions = "4",                        textQuestions = "Процент сотрудников, прошедших обучение в\n" +                                "Кайдзен-центре по тренерской программе",                        textRecommendation = "1. Составить пофамильный план-график обучения сотрудников\n" +                                "2. Организовать обучение сотрудников\n" +                                "3. Организовать учет результатов обучения сотрудников")                }                item {                    CommonButtonsInput(modifier = modifier,                        value = state.fiveQuestions.toInt(),                        onValueChange = { fiveQuestions ->                            staffTrainingViewModel.getIntent(intent = ApplicationIntent.ChangedFiveQuestions(                                newResult = fiveQuestions))                        },                        numberQuestions = "5",                        textQuestions = "Процент сотрудников организаций бизнеспартнеров, прошедших 8-часовой курс \"Введение в Kaizen\"",                        textRecommendation = "1. Составить пофамильный план-график обучения сотрудников организаций бизнеспартнеров\n" +                                "2. Организовать обучение сотрудников организаций бизнес-партнеров\n" +                                "3. Организовать учет результатов обучения сотрудников организаций бизнес-партнеров")                }                item {                    CommonButtonsInput(modifier = modifier,                        value = state.sixQuestions.toInt(),                        onValueChange = { sixQuestions ->                            staffTrainingViewModel.getIntent(intent = ApplicationIntent.ChangedSixQuestions(                                newResult = sixQuestions))                        },                        numberQuestions = "6",                        textQuestions = "Процент сотрудников организаций бизнеспартнеров, прошедших 8-часовой курс\n" +                                "\"Картирование и Хронометраж\"",                        textRecommendation = "1. Составить пофамильный план-график\n" +                                "обучения сотрудников организаций бизнеспартнеров\n" +                                "2. Организовать обучение сотрудников\n" +                                "организаций бизнес-партнеров\n" +                                "3. Организовать учет результатов обучения\n" +                                "сотрудников организаций бизнес-партнеров")                }                item {                    CommonButtonsInput(modifier = modifier,                        value = state.sevenQuestions.toInt(),                        onValueChange = { sevenQuestions ->                            staffTrainingViewModel.getIntent(intent = ApplicationIntent.ChangedSevenQuestions(                                newResult = sevenQuestions))                        },                        numberQuestions = "7",                        textQuestions = "Процент сотрудников организаций бизнеспартнеров, прошедших 8-часовой курс\n" +                                "\"Инструменты Kaizen\"",                        textRecommendation = "1. Составить пофамильный план-график\n" +                                "обучения сотрудников организаций бизнеспартнеров\n" +                                "2. Организовать обучение сотрудников\n" +                                "организаций бизнес-партнеров\n" +                                "3. Организовать учет результатов обучения\n" +                                "сотрудников организаций бизнес-партнеров")                }                item {                    CommonButtonsInput(modifier = modifier,                        value = state.eightQuestions.toInt(),                        onValueChange = { eightQuestions ->                            staffTrainingViewModel.getIntent(intent = ApplicationIntent.ChangedEightQuestions(                                newResult = eightQuestions))                        },                        numberQuestions = "8",                        textQuestions = "Процент сотрудников организаций бизнеспартнеров, прошедших обучение по тренерской программе.",                        textRecommendation = "1. Составить пофамильный план-график обучения сотрудников организаций бизнеспартнеров\n" +                                "2. Организовать обучение сотрудников организаций бизнес-партнеров\n" +                                "3. Организовать учет результатов обучения сотрудников организаций бизнес-партнеров")                }                item {                    val result = floor(state.result * 10) / 10.0                    ResultView(modifier = modifier,                        textResult = result.toString(),                        text = "Итог")                }                item {                    val newResult = floor(state.newResult * 10) / 10.0                    ResultView(modifier = modifier,                        textResult = newResult.toString(),                        text = "Предыдущее значение")                }            }            CommonButtons(                modifier = modifier.align(Alignment.BottomCenter),                onClickSave = {                    Toast.makeText(                        context,                        "Сохраненно",                        Toast.LENGTH_SHORT                    ).show()                    staffTrainingViewModel.getIntent(intent = ApplicationIntent.SaveClicked)                },                onClickDelete = {                    Toast.makeText(                        context,                        "Удалено",                        Toast.LENGTH_SHORT                    ).show()                    staffTrainingViewModel.getIntent(intent = ApplicationIntent.DeletedClicked)                },                onClickNext = { navController.navigate(route = "logisticsScreen") },                onClickBack = { navController.popBackStack() },                navController = navController            )        }        true -> FullScreenLoaderComponent(modifier = modifier)    }    LaunchedEffect(key1 = Unit, block = {        staffTrainingViewModel.getIntent(intent = ApplicationIntent.InitialScreen)        visible = true    })}