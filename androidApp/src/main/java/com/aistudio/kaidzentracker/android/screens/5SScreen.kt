package com.aistudio.kaidzentracker.android.screensimport android.widget.Toastimport androidx.compose.foundation.ExperimentalFoundationApiimport androidx.compose.foundation.backgroundimport androidx.compose.foundation.layout.Boximport androidx.compose.foundation.layout.fillMaxSizeimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.lazy.LazyColumnimport androidx.compose.material.CircularProgressIndicatorimport androidx.compose.runtime.*import androidx.compose.runtime.livedata.observeAsStateimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.platform.LocalContextimport androidx.compose.ui.unit.dpimport androidx.navigation.NavControllerimport com.aistudio.kaidzentracker.android.screens.commonScreenComponents.*import com.aistudio.kaidzentracker.android.theme.PrimaryVariantimport com.aistudio.kaidzentracker.android.ui.viewmodels.FiveSScreenViewModelimport com.aistudio.kaidzentracker.android.ui.viewmodels.models.ApplicationIntentimport org.koin.androidx.compose.koinViewModelimport kotlin.math.floor@Composablefun FiveSScreen(modifier: Modifier, navController: NavController) {    FiveSScreenContent(modifier = modifier, navController = navController)}@OptIn(ExperimentalFoundationApi::class)@Composablefun FiveSScreenContent(    modifier: Modifier,    navController: NavController,    fiveSScreenViewModel: FiveSScreenViewModel = koinViewModel(),) {    val context = LocalContext.current    val state = fiveSScreenViewModel.fiveSScreenState.observeAsState().value    var visible by remember { mutableStateOf(false) }    when (state!!.isLoading) {        false -> Box(modifier = modifier            .fillMaxSize()            .background(color = Color.White)) {            LazyColumn(modifier = modifier.padding(bottom = 45.dp)) {                item {                    CommonLogoAppBar(modifier = modifier, isAnimated = visible)                }                stickyHeader {                    CommonHeaderText(                        modifier = modifier,                        textHeader = "5S И ВИЗУАЛЬНЫЙ МЕНЕДЖМЕНТ",                        colorBackgraund = PrimaryVariant,                        height = 28,                        shape = 5,                        paddingHorizontal = 6                    )                }                item {                    CommonTableHeader(modifier = modifier)                }                item {                    CommonButtonsInput(                        modifier = modifier,                        numberQuestions = "1",                        textQuestions = "Процент персонала, ознакомленный с основами, технологиями, инструментами и порядком внедрения системы 5S",                        textRecommendation = "Провести занятия с персоналом по 5S. Разработать программу занятий. Составить по фамильный план обучения с отметками о выполнении и Ф.И.О. преподавателя",                        value = state.firstQuestions.toInt(),                        onValueChange = { firstQuestions ->                            fiveSScreenViewModel                                .getIntent(intent = ApplicationIntent                                    .ChangedFirstQuestions(newResult = firstQuestions))                        })                }                item {                    CommonButtonsInput(modifier = modifier,                        value = state.secondQuestions.toInt(),                        onValueChange = { secondQuestions ->                            fiveSScreenViewModel.getIntent(intent = ApplicationIntent.ChangedSecondQuestions(                                newResult = secondQuestions))                        },                        numberQuestions = "2",                        textQuestions = "Процент рабочих мест, закрепленных за персоналом (в производстве и в офисе), имеющих информационные таблички с фотографиями сотрудников и их должностями",                        textRecommendation = "На всех стационарных рабочих местах (офис,\n" +                                "склад, цех и т.д.) установить (повесить)\n" +                                "информационные таблички. Для этого\n" +                                "составить список рабочих мест, участков\n" +                                "производственных помещений, участков\n" +                                "строительной или производственной площадки,\n" +                                "офисных или иных помещений (склад, столовая,\n" +                                "санузел и т.д.).\n" +                                "Приказом закрепить ответственных из числа\n" +                                "сотрудников, отвечающих за чистоту и порядок\n" +                                "на каждом участке.\n" +                                "Составить схему и разместить ее в\n" +                                "общедоступном месте.")                }                item {                    CommonButtonsInput(modifier = modifier,                        value = state.threeQuestions.toInt(),                        onValueChange = { threeQuestions ->                            fiveSScreenViewModel.getIntent(intent = ApplicationIntent.ChangedThreeQuestions(                                newResult = threeQuestions))                        },                        numberQuestions = "3",                        textQuestions = "Процент рабочих мест, на которые разработаны. Стандарты рабочего места, включающие порядок уборки и самооценки",                        textRecommendation = "1. Составить перечень рабочих мест: для ПТО, для водителей ТС, операторов ДСТ и для диспетчеров.\n" +                                "2. Разработать Стандарт на каждый вид рабочего места.")                }                item {                    CommonButtonsInput(modifier = modifier,                        value = state.fourQuestions.toInt(),                        onValueChange = { fourQuestions ->                            fiveSScreenViewModel.getIntent(intent = ApplicationIntent.ChangedFourQuestions(                                newResult = fourQuestions))                        },                        numberQuestions = "4",                        textQuestions = "Процент участков, обеспеченных плакатами по 5S",                        textRecommendation = "Разработать плакаты по 5S: информация, фото с объекта"                    )                }                item {                    CommonButtonsInput(modifier = modifier,                        value = state.fiveQuestions.toInt(),                        onValueChange = { fiveQuestions ->                            fiveSScreenViewModel.getIntent(intent = ApplicationIntent.ChangedFiveQuestions(                                newResult = fiveQuestions))                        },                        numberQuestions = "5",                        textQuestions = "В административных зданиях и производственных помещениях, на строительных и производственных площадках используются указатели месторасположения структурных подразделений и производственных участков. Зоны\n" +                                "перемещения персонала, движения\n" +                                "транспорта, хранения оборудования,\n" +                                "материалов и опасных зон визуализированы\n" +                                "разметкой или указателями (нет -0 / везде -10)",                        textRecommendation = "1. Разработать навигационные указатели.\n" +                                "2. Произвести разметку зон перемещения\n" +                                "персонала и движения транспорта, хранения\n" +                                "оборудования и материалов, опасных зон..."                    )                }                item {                    CommonButtonsInput(modifier = modifier,                        value = state.sixQuestions.toInt(),                        onValueChange = { sixQuestions ->                            fiveSScreenViewModel.getIntent(intent = ApplicationIntent.ChangedSixQuestions(                                newResult = sixQuestions))                        },                        numberQuestions = "6",                        textQuestions = "В подразделении используются информационные стенды/плакаты и т.д. для доведения обучающей информации и достижений подразделений до работников",                        textRecommendation = "Разработать информационные стенды: О\n" +                                "Производственной системе; О Kaizen предложениях; Как подать; Статистика; Лучшие\n" +                                "предложения; Лучшие авторы; Текущие показатели работы План/Факт; Планы на\n" +                                "месяц/год; Виды потерь и анализ потерь на проекте;"                    )                }                item {                    CommonButtonsInput(modifier = modifier,                        value = state.sevenQuestions.toInt(),                        onValueChange = { sevenQuestions ->                            fiveSScreenViewModel.getIntent(intent = ApplicationIntent.ChangedSevenQuestions(                                newResult = sevenQuestions))                        },                        numberQuestions = "7",                        textQuestions = "Стандарты рабочих мест соблюдаются. Все предметы, оргтехника возвращается на закрепленные места (нет -0 / везде -10)",                        textRecommendation = "Регулярно проводить Kaizen-обходы выборочный аудит с заполнением чек-листов и составлением\n" +                                "карт спагетти, VSM, комбинационных ведомостей."                    )                }                item {                    CommonButtonsInput(modifier = modifier,                        value = state.eightQuestions.toInt(),                        onValueChange = { eightQuestions ->                            fiveSScreenViewModel.getIntent(intent = ApplicationIntent.ChangedEightQuestions(                                newResult = eightQuestions))                        },                        numberQuestions = "8",                        textQuestions = "Места хранения хоз. инвентаря, средств уборки и раздельного хранения отходов определены и визуализированы (нет -0 /везде -10)",                        textRecommendation = "Организовать и визуализировать места\n" +                                "хранения хоз. инвентаря, средств уборки и раздельного хранения отходов."                    )                }                item {                    CommonButtonsInput(modifier = modifier,                        value = state.nineQuestions.toInt(),                        onValueChange = { nineQuestions ->                            fiveSScreenViewModel.getIntent(intent = ApplicationIntent.ChangedNineQuestions(                                newResult = nineQuestions))                        },                        numberQuestions = "9",                        textQuestions = "На земле, на полу, на оборудовании, внутри и под оборудованием, под столами, под стеллажами и т.д. отсутствуют инструменты, оснастка, материалы и прочие предметы ( нет -0/везде -10)",                        textRecommendation = "Регулярно проводить Kaizen-обходы выборочный аудит с заполнением чек-листов \"Чистота на рабочих местах\" и фото-видео съемкой"                    )                }                item {                    CommonButtonsInput(modifier = modifier,                        value = state.tenQuestions.toInt(),                        onValueChange = { tenQuestions ->                            fiveSScreenViewModel.getIntent(intent = ApplicationIntent.ChangedTenQuestions(                                newResult = tenQuestions))                        },                        numberQuestions = "10",                        textQuestions = "Процент рабочих мест, на которых размещены стандарты выполнения работ, регламенты, памятки и т.д",                        textRecommendation = "1. Обеспечить каждое рабочее место Стандартом.\n" +                                "2. Разработать и разместить на рабочих местах Памятки по выполнению отдельных операций"                    )                }                item {                    CommonButtonsInput(modifier = modifier,                        value = state.eleventhQuestions.toInt(),                        onValueChange = { eleventQuestions ->                            fiveSScreenViewModel.getIntent(intent = ApplicationIntent.ChangedEleventhQuestions(                                newResult = eleventQuestions))                        },                        numberQuestions = "11",                        textQuestions = "На складах места хранения заготовок, полуфабрикатов, готовой продукции и комплектующих изделий визуализированы (применяется адресное хранение или иные системы). Визуализация соблюдается. (нет -0 / везде -5)",                        textRecommendation = "Оборудовать места хранения средствами визуализации"                    )                }                item {                    CommonButtonsInput(modifier = modifier,                        value = state.twelfthQuestions.toInt(),                        onValueChange = { twelfthQuestions ->                            fiveSScreenViewModel.getIntent(intent = ApplicationIntent.ChangedTwelfthQuestions(                                newResult = twelfthQuestions))                        },                        numberQuestions = "12",                        textQuestions = "Оборудование, стеллажи, приборы, шкафы, мебель размещены в соответствии с детальной планировкой рабочего места,\n" +                                "отсутствуют неиспользуемые или излишние\n" +                                "единицы оборудования, стеллажи и т.д. (нет -0 /да -10)",                        textRecommendation = "Регулярно проводить Kaizen-обходы выборочный аудит с заполнением чек-листов"                    )                }                item {                    CommonButtonsInput(modifier = modifier,                        value = state.thirteenthQuestions.toInt(),                        onValueChange = { thirteenthQuestions ->                            fiveSScreenViewModel.getIntent(intent = ApplicationIntent.ChangedThirteenthQuestions(                                newResult = thirteenthQuestions))                        },                        numberQuestions = "13",                        textQuestions = "Руководитель подразделения контролирует состояние внедрения 5S на рабочем месте (есть документальное подтверждение). Процедура контроля формализована.",                        textRecommendation = "1. Разработать Чек-лист \"Аудит внедрения и\n" +                                "соблюдения 5S на рабочих местах руководителем проекта\".\n" +                                "2. Регулярно проводить Kaizen-обходы\n" +                                "выборочный аудит с заполнением чек-листов"                    )                }                item {                    val result = floor(state.result * 10) / 10.0                    ResultView(modifier = modifier,                        textResult = result.toString(),                        text = "Итог")                }                item {                    val newResult = floor(state.newResult * 10) / 10.0                    ResultView(modifier = modifier,                        textResult = newResult.toString(),                        text = "Предыдущее значение")                }            }                    CommonButtons(                        modifier = modifier.align(Alignment.BottomCenter),                        onClickSave = {                            Toast.makeText(                                context,                                "Сохраненно",                                Toast.LENGTH_SHORT                            ).show()                            fiveSScreenViewModel.getIntent(intent = ApplicationIntent.SaveClicked)                        },                        onClickDelete = {                            Toast.makeText(                                context,                                "Удалено",                                Toast.LENGTH_SHORT                            ).show()                            fiveSScreenViewModel.getIntent(intent = ApplicationIntent.DeletedClicked)                        },                        onClickNext = { navController.navigate(route = "trmScreen") },                        onClickBack = { navController.popBackStack() },                        navController = navController                    )            }        true -> FullScreenLoaderComponent(modifier = modifier)    }    LaunchedEffect(key1 = Unit, block = {        fiveSScreenViewModel.getIntent(intent = ApplicationIntent.InitialScreen)        visible = true    })}@Composablefun FullScreenLoaderComponent(modifier: Modifier) {    Box(modifier = modifier.fillMaxSize(), contentAlignment = Alignment.Center) {        CircularProgressIndicator()    }}