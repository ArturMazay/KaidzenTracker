package com.aistudio.kaidzentracker.android.domain.logisticimport com.aistudio.kaidzentracker.android.data.localDataSource.logisticsDataSource.LogisticDataSourceimport com.aistudio.kaidzentracker.android.data.localDataSource.logisticsDataSource.LogisticEntityclass LogisticRepositoryImpl(private val logisticDataSource: LogisticDataSource) :    LogisticRepository {    override suspend fun get(): Logistic? =        logisticDataSource.getLocalSource()            ?.let { entity -> mapToDomain(logisticEntity = entity) }    override suspend fun delete() = logisticDataSource.deleteLocalSource()    override suspend fun save(logistic: Logistic) {        delete()        logisticDataSource.insertLocalSource(logisticEntity = mapToEntity(            logistic = logistic))    }    private fun mapToDomain(logisticEntity: LogisticEntity): Logistic =        with(logisticEntity) {            Logistic(                firstQuestions = firstQuestions ?: 0.0,                secondQuestions = secondQuestions ?: 0.0,                threeQuestions = threeQuestions ?: 0.0,                fourQuestions = fourQuestions ?: 0.0,                fiveQuestions = fiveQuestions ?: 0.0,                sixQuestions = sixQuestions ?: 0.0,                sevenQuestions = sevenQuestions ?: 0.0,                result = result ?: 0.0,                newResult = newResult ?: 0.0            )        }    private fun mapToEntity(logistic: Logistic?): LogisticEntity =        with(logistic) {            LogisticEntity(                firstQuestions = this?.firstQuestions,                secondQuestions = this?.secondQuestions,                threeQuestions = this?.threeQuestions,                fourQuestions = this?.fourQuestions,                fiveQuestions = this?.fiveQuestions,                sixQuestions = this?.sixQuestions,                sevenQuestions = this?.sevenQuestions,                result = this?.result,                newResult = this?.newResult            )        }}